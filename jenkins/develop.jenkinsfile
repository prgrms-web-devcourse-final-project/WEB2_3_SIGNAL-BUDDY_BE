pipeline {
    agent any

    environment {
        VERSION = sh(script: 'git rev-parse --short origin/develop', returnStdout: true).trim()
        DOCKER_IMAGE = "${DOCKER_REGISTRY}/signal-buddy:${VERSION}"
    }

    stages {
        stage ('Git clone') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/develop']],
                    extensions: [submodule(parentCredentials: true, recursiveSubmodules: true, reference: '', trackingSubmodules: true)],
                    userRemoteConfigs: [
                        [credentialsId: 'signal-buddy-github-id', refspec: '+refs/heads/develop:refs/remotes/origin/develop',
                        url: 'https://github.com/prgrms-web-devcourse-final-project/WEB2_3_SIGNAL-BUDDY_BE.git']]
                )
            }
        }

        stage ('Deploy') {
            steps {
                sshagent (credentials: ['SIGNAL_BUDDY_SSH']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ${API_SERVER_USER}@${SIGNAL_BUDDY_IP} "docker login ghcr.io -u ${GITHUB_ID} --password ${SIGNAL_BUDDY_TOKEN}"

                        ssh -t ${API_SERVER_USER}@${SIGNAL_BUDDY_IP} "docker pull ${DOCKER_IMAGE}"

                        ssh -t ${API_SERVER_USER}@${SIGNAL_BUDDY_IP} "echo 'DOCKER_IMAGE=${DOCKER_IMAGE}' > ${SUBMODULE_DIRECTORY}/docker/.env && sudo sh ${SUBMODULE_DIRECTORY}/script/deploy.sh"

                        ssh -t ${API_SERVER_USER}@${SIGNAL_BUDDY_IP} "docker system prune -a -f || true"
                    '''
                }
            }
        }
    }

    post {
        success {
            slackSend(channel: "${SLACK_NOTIFICATION_CHANNEL}", color: '#41fc03',
                      message: "개발 서버에 성공적으로 배포했습니다! \n Job : <${env.BUILD_URL}|${env.JOB_NAME} ${env.BUILD_NUMBER}>")
        }
        failure {
            slackSend (channel: "${SLACK_NOTIFICATION_CHANNEL}", color: '#fc0f03',
                        message: "개발 서버에 배포가 실패했습니다! \n Job : <${env.BUILD_URL}|${env.JOB_NAME} ${env.BUILD_NUMBER}>")
        }
    }
}